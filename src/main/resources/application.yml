server:
  port: 8080
public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJbqaQZ2FJJxjMQhTvUWYemQsN6qwW4tGBXza0HBOETHSks6mmp3GtBKxCDyEcB5+Se1oVsgZ1tD0OY4D/VmO7ECAwEAAQ==
spring:
  redis:
    database: 1
    host: 172.20.10.201
    port: 6379
#    password: aaa
    timeout: 6000
    lettuce:
      pool:
        max-active: 1000  #连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10 #连接池中的最大空闲连接
        min-idle: 3 #连接池中的最小空闲连接
  datasource:
#   初始化sql配置
#   schema: classpath:sql/cat2.sql
#   data: classpath:sql/cat.sql
#   initialization-mode: always
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/mydb?useUnicode=true&useSSL=false&characterEncoding=utf8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
    username: root
    password: FlowV83jh03fDgFAahS1OJ/KMYSfZ6IfLkAjHJ1yrqTvsjBpHcmYIPDpDS+BX0YIHSEM3n+zI4UE2zRRmgmrUw==
    druid:
      #连接池的信息配置
      #初始化大小
      initialSize: 5
      # asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
      async-init: true
      #最小值
      minIdle: 5
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      keepAlive: true
      #最大值
      maxActive: 100
      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      # alidation-query要配置，为空testWhileIdle,testOnBorrow，testOnReturn不生效
      validation-query: select '1' from dual
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false

      # 打开PSCache，并且指定每个连接上PSCache的大小，mysql建议关闭
      poolPreparedStatements: false
      # 最大PSCache连接 ,设置后会自动启用pscache，所以不设置，大于0为启用
      maxPoolPreparedStatementPerConnectionSize: -1
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true

      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
      #'wall'用于防火墙，SpringBoot中没有log4j，我改成了log4j2
      filters: stat,wall,log4j2
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500;config.decrypt=true;config.decrypt.key=${public-key}
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.springboot.demo.service.*

      # 配置StatFilter
      web-stat-filter:
        #默认为false，设置为true启动
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      #配置StatViewServlet
      stat-view-servlet:
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        #允许那些ip
        allow: 127.0.0.1,192.168.0.1/24,172.20.240.1/24
        login-username: root
        login-password: root1234
        # IP白名单
        # allow: 127.0.0.1
        #　IP黑名单（共同存在时，deny优先于allow）
        # deny: 192.168.1.218
        #是否可以重置数据
        reset-enable: true
        #启用
        enabled: true
      # 配置StatFilter
      filter:
        # 启用ConfigFilter
        config:
          enabled: true
        stat:
          log-slow-sql: true


  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB
  jackson:
   #参数意义：
   #JsonInclude.Include.ALWAYS           默认的意思是即时属性为null，仍然也会输出这个key
   #JsonInclude.Include.NON_DEFAULT     属性为默认值不序列化
   #JsonInclude.Include.NON_EMPTY         属性为 空（””） 或者为 NULL 都不序列化
   #JsonInclude.Include.NON_NULL           属性为NULL   不序列化
    default-property-inclusion: ALWAYS
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss


#  jackson:
#    #日期格式化
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#    serialization:
#      #格式化输出
#      indent_output: true
#      #忽略无法转换的对象
#      fail_on_empty_beans: false
#    #设置空如何序列化
#    defaultPropertyInclusion: NON_EMPTY
#    deserialization:
#      #允许对象忽略json中不存在的属性
#      fail_on_unknown_properties: false
#    parser:
#      #允许出现特殊字符和转义符
#      allow_unquoted_control_chars: true
#      #允许出现单引号
#      allow_single_quotes: true

mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations:
    - classpath:mapper/*/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.springboot.demo.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    table-prefix: db_
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.EnumTypeHandler


# log
logging:
  config: classpath:log4j2-console.xml